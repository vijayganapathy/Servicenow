<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>incident</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="incident">state=1^EQ<item endquery="false" field="state" goto="false" newquery="false" operator="=" or="false" value="1"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Incident Notification Filter</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

	// Email addresses
	var emailAddress1;
	var emailAddress2;
	var emailAddress3;
	var emailAddresses;
	var keyword;
	var priority1;
	var containsKeyword;
	
	//Queue name
	var columnName = 'x_eptds_kasprev_kasprev_alert';
	var queueName = 'x_eptds_kasprev.IncidentEvent';
	var combinedDescription;
	var description;
	var incidentNumber = current.getValue('number');
	var shortDescription = current.getValue('short_description').replace(/[^\w\s]/gi, '').toLowerCase();
	if (current.getValue('description')) {
		description = current.getValue('description').replace(/[^\w\s]/gi, '').toLowerCase();
		combinedDescription = description + " " + shortDescription;
	} 
	else {
		combinedDescription = shortDescription;
	}

	var notificationKeywordRecord = new GlideRecord('x_eptds_kasprev_configuration');
	notificationKeywordRecord.orderBy('priority');	
	notificationKeywordRecord.query();

	while (notificationKeywordRecord.next()) {

		var priority = notificationKeywordRecord.getValue('priority');
		var keywords = notificationKeywordRecord.getValue('keywords').toLowerCase();
		var splittedWords = keywords.split(/[ ,]+/);
		for (var x = 0; x < splittedWords.length; x++) {
			containsKeyword = combinedDescription.includes(splittedWords[x]);
			if (containsKeyword) {

				keyword = splittedWords[x];
				priority1 = priority;
				emailAddress1 = notificationKeywordRecord.getValue('email_address_1');
				emailAddress2 = notificationKeywordRecord.getValue('email_address_2');
				emailAddress3 = notificationKeywordRecord.getValue('email_address_3');

				if (emailAddress2 != null && emailAddress3 != null ) {
					emailAddresses = emailAddress1 + ", " + emailAddress2 + ", " + emailAddress3;				
				} else if (emailAddress2 != null) {
					emailAddresses = emailAddress1 + ", " + emailAddress2;					
				} else if (emailAddress3 != null) {
					emailAddresses = emailAddress1 + ", " + emailAddress3;
				} else {
					emailAddresses = emailAddress1;
				}
				break;
			}
		}

		if (containsKeyword)
			break;
	}

	if (containsKeyword) {
		
			var notificationLogs = new GlideRecord('x_eptds_kasprev_notification_log');
			notificationLogs.incident_number = incidentNumber;
			notificationLogs.email_addresses = emailAddresses;
			notificationLogs.short_description = current.getValue('short_description');
			notificationLogs.keyword = keyword;
			notificationLogs.caller_id = current.getValue('caller_id');
			notificationLogs.priority = priority1;
			notificationLogs.insert();
		
			current.setValue(columnName,priority1);
			current.update();			
		
		gs.eventQueue(queueName, current, emailAddress1, incidentNumber);

		if (emailAddress2) {
			gs.eventQueue(queueName, current, emailAddress2, incidentNumber);
		}
		if (emailAddress3) {
			gs.eventQueue(queueName, current, emailAddress3, incidentNumber);
		}

	}
	else {
		current.setValue(columnName," ");
		current.update();
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-05-23 11:03:03</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>16127db4db965380f8aa9c27db9619f3</sys_id>
        <sys_mod_count>16</sys_mod_count>
        <sys_name>Incident Notification Filter</sys_name>
        <sys_overrides/>
        <sys_package display_value="Kasprev" source="x_eptds_kasprev">9a3fd53cdb565380f8aa9c27db96193b</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Kasprev">9a3fd53cdb565380f8aa9c27db96193b</sys_scope>
        <sys_update_name>sys_script_16127db4db965380f8aa9c27db9619f3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-05-28 06:09:42</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=16127db4db965380f8aa9c27db9619f3"/>
</record_update>
